openapi: 3.0.0
info:
  title: Edgex Foundry - Support Scheduler API
  description: This is the definition of the API for the Support Scheduler service in the EdgeX Foundry IOT microservice platform. Support Scheduler provides functionality for scheduling different actions in the EdgeX Foundry platform.
  version: 2.x
  
servers:
  - url: http://localhost:48085/api/v2
    description: URL for local development and testing
  
components:
  schemas:
    AddIntervalRequest:
      allOf:
      - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        cron:
          description: "A cron-styled regular expression indicating how often the action under interval should occur.  Use either runOnce, frequency or cron and not all."
          type: string
        end:
          description: "Start time in ISO 8601 format YYYYMMDD'T'HHmmss 	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyymmdd'T'HHmmss\")"
          type: string
        frequency:
          description: "The frequency of the event according ISO 8601"
          type: string
        name:
          description: "Non-database identifier for an interval (*must be unique)"
          type: string
        runOnce:
          description: "Indicates that this interval runs one time - at the time indicated by the start"
          type: boolean
        start:
          description: "Start time in ISO 8601 format YYYYMMDD'T'HHmmss 	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyymmdd'T'HHmmss\")"
          type: string
      required:
      - name
    AddIntervalResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    AddIntervalActionRequest:
      allOf:
      - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        host:
          description: "The host targeted by the action"
          type: string
        httpMethod:
          description: "Indicates which Http verb should be used when the action targets a REST endpoint."
          type: string
        intervalId:
          description: "The ID of the interval to which the action is associated."
          type: string
          format: uuid
        name:
          description: "Non-database identifier for an interval action"
          type: string
        parameters:
          description: "Any parameters required by the action"
          type: string
        password:
          description: "If authentication is required, the password"
          type: string
        path:
          description: "The required path at the targeted host for fulfillment of the action."
          type: string
        port:
          description: "The port to address on the targeted host"
          type: integer
        protocol:
          description: "Identifies the protocol required by the action"
          type: string
        publisher:
          type: string
        target:
          description: "The target of the action"
          type: string
        topic:
          description: "When the action supports pub/sub the topic to which a message should be published."
          type: string
        user:
          description: "If authentication is required, the username"
          type: string
      required:
      - intervalId
      - name
      - target
    AddIntervalActionResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    BulkRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request type for use via the /bulk endpoint."
      type: object
      properties:
        action:
          description: "The HTTP verb applicable to the request type contained in the 'content' property (e.g. GET, PUT, POST, DELETE, PATCH)"
          type: string
        content:
          description: "Contains a serialized request type as a byte array"
          type: string
          format: byte
        dtoVersion:
          description: "Indicates the version of the serialized request type contained in the 'content' property."
          type: string
        type:
          description: "Indicates the type of the serialized blob in the 'content' property."
          type: string
    BulkResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use via the /bulk endpoint."
      type: object
      properties:
        action:
          description: "The HTTP verb applicable to the corresponding request type resulting in the given response (e.g. GET, PUT, POST, DELETE, PATCH)"
          type: string
        content:
          description: "Contains a serialized response type as a byte array"
          type: string
          format: byte
        dtoVersion:
          description: "Indicates the version of the serialized response type contained in the 'content' property."
          type: string
        type:
          description: "Indicates the type of the serialized blob in the 'content' property."
          type: string
    CorrelatedRequest:
      description: "Provides a correlation ID that can be used when grouping multiple requests into a single batch. For example, multiple actions can be posted at once. Each entry has its own request identifier while the batch has an overall identifier. This allows for visibility into whether or not a response was obtained for every request in the batch."
      type: object
      properties:
        correlationId:
          description: "Identifies the batch to which this request belongs. If used via REST, this value should be the same as that of  the ''X-Correlation-ID'' HTTP header."
          type: string
          format: uuid
          example: "82eb2e26-0f24-48aa-ae4c-de9dac3fb9bc"
        requestId:
          description: "Uniquely identifies this request apart from its peers in the batch. For implementation, recommend this value be generated by the type's constructor."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        version:
          description: "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - correlationId
        - requestId
        - version
    CorrelatedResponse:
      description: "Provides a correlation ID that can be used when grouping multiple responses into a single batch. For example, multiple actions can be posted at once. The responses can be returned as a batch or individually. It doesn't matter as long as both of these properties are correctly set because either way the caller will have visibility into whether or not a response was obtained for every request in the batch."
      type: object
      properties:
        correlationId:
          description: "Identifies the batch to which this response belongs. If used via REST, this value should be the same as that of  the ''X-Correlation-ID'' HTTP header."
          type: string
          format: uuid
          example: "82eb2e26-0f24-48aa-ae4c-de9dac3fb9bc"
        requestId:
          description: "Uniquely identifies the request within the larger batch resulting in this response."
          type: string
          format: uuid
          example: "e6e8a2f4-eb14-4649-9e2b-175247911369"
        statusCode:
          description: "A numeric code signifying the operational status of the response."
          type: integer
        message:
          description: "A field that can contain a free-form message, such as an error message."
          type: string
        version:
          description: "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - correlationId
        - requestId
        - version
    Interval:
      description: "Defines the frequency at which some action should occur."
      type: object
      properties:
        created:
          description: "A timestamp indicating when the interval was created."
          type: integer
        cron:
          description: "A cron-styled regular expression indicating how often the action under interval should occur.  Use either runOnce, frequency or cron and not all."
          type: string
        end:
          description: "Start time in ISO 8601 format YYYYMMDD'T'HHmmss 	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyymmdd'T'HHmmss\")"
          type: string
        frequency:
          description: "The frequency of the event according ISO 8601"
          type: string
        id:
          description: "Uniquely identifies the interval"
          type: string
          format: uuid
        modified:
          description: "A timestamp indicating when the interval was last modified."
          type: integer
        name:
          description: "Non-database identifier for an interval (*must be unique)"
          type: string
        runOnce:
          description: "Indicates that this interval runs one time - at the time indicated by the start"
          type: boolean
        start:
          description: "Start time in ISO 8601 format YYYYMMDD'T'HHmmss 	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyymmdd'T'HHmmss\")"
          type: string
    IntervalAction:
      description: "Defines the action to be taken at a specified interval."
      type: object
      properties:
        created:
          description: "A timestamp indicating when the interval action was created."
          type: integer
        host:
          description: "The host targeted by the action"
          type: string
        httpMethod:
          description: "Indicates which Http verb should be used when the action targets a REST endpoint."
          type: string
        id:
          description: "Uniquely identifies the interval action"
          type: string
          format: uuid
        intervalId:
          description: "The ID of the interval to which the action is associated."
          type: string
          format: uuid
        modified:
          description: "A timestamp indicating when the interval action was last modified."
          type: integer
        name:
          description: "Non-database identifier for an interval action"
          type: string
        parameters:
          description: "Any parameters required by the action"
          type: string
        password:
          description: "If authentication is required, the password"
          type: string
        path:
          description: "The required path at the targeted host for fulfillment of the action."
          type: string
        port:
          description: "The port to address on the targeted host"
          type: integer
        protocol:
          description: "Identifies the protocol required by the action"
          type: string
        publisher:
          type: string
        target:
          description: "The target of the action"
          type: string
        topic:
          description: "When the action supports pub/sub the topic to which a message should be published."
          type: string
        user:
          description: "If authentication is required, the username"
          type: string
    IntervalActionResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        action:
          $ref: '#/components/schemas/IntervalAction'
    IntervalResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/Interval'
    PingResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        timestamp:
          description: "Outputs the current server timestamp in RFC1123 format"
          example: "Mon, 02 Jan 2006 15:04:05 MST"
          type: string
    UpdateIntervalRequest:
      allOf:
      - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        cron:
          description: "A cron-styled regular expression indicating how often the action under interval should occur.  Use either runOnce, frequency or cron and not all."
          type: string
        end:
          description: "Start time in ISO 8601 format YYYYMMDD'T'HHmmss 	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyymmdd'T'HHmmss\")"
          type: string
        frequency:
          description: "The frequency of the event according ISO 8601"
          type: string
        id:
          description: "Uniquely identifies the interval"
          type: string
          format: uuid
        name:
          description: "Non-database identifier for an interval (*must be unique)"
          type: string
        runOnce:
          description: "Indicates that this interval runs one time - at the time indicated by the start"
          type: boolean
        start:
          description: "Start time in ISO 8601 format YYYYMMDD'T'HHmmss 	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyymmdd'T'HHmmss\")"
          type: string
      required:
      - id
      - name
    UpdateIntervalResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        id:
          type: string
          format: uuid
    UpdateIntervalActionRequest:
      allOf:
      - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        host:
          description: "The host targeted by the action"
          type: string
        httpMethod:
          description: "Indicates which Http verb should be used when the action targets a REST endpoint."
          type: string
        id:
          description: "Uniquely identifies the interval action"
          type: string
          format: uuid
        intervalId:
          description: "The ID of the interval to which the action is associated."
          type: string
          format: uuid
        name:
          description: "Non-database identifier for an interval action"
          type: string
        parameters:
          description: "Any parameters required by the action"
          type: string
        password:
          description: "If authentication is required, the password"
          type: string
        path:
          description: "The required path at the targeted host for fulfillment of the action."
          type: string
        port:
          description: "The port to address on the targeted host"
          type: integer
        protocol:
          description: "Identifies the protocol required by the action"
          type: string
        publisher:
          type: string
        target:
          description: "The target of the action"
          type: string
        topic:
          description: "When the action supports pub/sub the topic to which a message should be published."
          type: string
        user:
          description: "If authentication is required, the username"
          type: string
      required:
      - id
      - intervalId
      - name
      - target
    UpdateIntervalActionResponse:
      allOf:
      - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        id:
          type: string
          format: uuid
  parameters:
    offsetParam:
      in: query
      name: offset
      required: true
      schema:
        type: integer
        minimum: 0
      description: "The number of items to skip before starting to collect the result set."
    limitParam:
      in: query
      name: limit
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: "The numbers of items to return."
    correlatedRequestHeader:
      in: header
      name: X-Correlation-ID
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
  headers:
    correlatedResponseHeader:
      description: "A response header that returns the unique correlation ID used to initiate the request."
      schema:
        type: string
        format: uuid
      required: true
      example: "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
paths:
  /bulk:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Accepts an arbitrary number of BulkRequest instances. Each BulkRequest has a 'content' property that holds a specific request type. This endpoint is operation agnostic will route the request to the appropriate handler implementation within the service."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkResponse'
  /interval:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Add one or more new Intervals - name on each request must be unique."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddIntervalRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddIntervalResponse'
    patch:
      summary: "Update one or more existing Intervals"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateIntervalRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateIntervalResponse'
  /interval/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of intervals sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntervalResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntervalResponse'
  /interval/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns an interval by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
    delete:
      summary: "Deletes an interval according to the specified ID. Associated actions will also be deleted."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
  /interval/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of an interval"
    get:
      summary: "Returns an interval according to the specified name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
    delete:
      summary: "Deletes an interval according to the specified name. Associated actions will also be deleted."
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalResponse'
  /intervalaction:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
    post:
      summary: "Add one or more new IntervalActions - name on each request must be unique."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddIntervalActionRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddIntervalActionResponse'
    patch:
      summary: "Update one or more existing IntervalActions"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateIntervalActionRequest'
      responses:
        '207':
          description: "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure."
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateIntervalActionResponse'
  /intervalaction/all:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of interval actions sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntervalActionResponse'
  /intervalaction/id/{id}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns an interval action by ID"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
    delete:
      summary: "Deletes an interval action by ID"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
  /intervalaction/name/{name}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of an interval action"
    get:
      summary: "Returns an interval action according to the specified name"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
    delete:
      summary: "Deletes an interval action by name"
      responses:
        '204':
          description: "Delete successful"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
        '400':
          description: "Request is in an invalid state"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '404':
          description: "The requested resource does not exist"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
  /intervalaction/target/{target}:
    parameters:
      - $ref: '#/components/parameters/correlatedRequestHeader'
      - name: target
        in: path
        required: true
        schema:
          type: string
        description: "The target of an interval action"
    get:
      summary: "Returns a paginated list of all interval actions associated with the specified target."
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntervalActionResponse'
    delete:
      summary: "Deletes all interval actions associated with the specified target."
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalActionResponse'
  /ping:
    get:
      summary: "A simple 'ping' endpoint that can be used as a service healthcheck"
      responses:
        '200':
          description: "OK"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '500':
          description: "An unexpected error occurred on the server"
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/correlatedResponseHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
      