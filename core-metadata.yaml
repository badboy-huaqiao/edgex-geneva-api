openapi: 3.0.0
info:
  title: Edgex Foundry - Core Metadata API
  description: "This is the definition of the API for the Core Metadata service in the EdgeX Foundry IOT microservice platform. Core Metadata is responsible for all information related to provisioned devices and their associated services."
  version: 2.x
servers:
  - url: 'http://localhost:48081/api/v2'
    description: URL for local development and testing
components:
  schemas:
    AddAddressableRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: A request to add a new addressable.
      type: object
      properties:
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
      required:
        - name
        - protocol
        - address
    AddAddressableResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in adding an Addressable. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to add a new device associated with a specific device service and conforming to a specific device profile."
      type: object
      properties:
        deviceName:
          type: string
        serviceName:
          type: string
        profileName:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
      required:
        - deviceName
        - serviceName
        - profileName
        - protocols
    AddDeviceResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in adding a Device. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to add a new device profile. When making this request, the ID property should not be populated."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    AddDeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in adding a Device Profile. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to add a new DeviceService - name must be unique and the specified addressable must already exist"
      type: object
      properties:
        deviceServiceName:
          type: string
        addressableName:
          type: string
        operatingState:
          description: "Can only be set to ENABLED or DISABLED"
          type: string
        labels:
          type: array
          items:
            type: string
        adminState:
          description: "Can only be set to LOCKED or UNLOCKED"
          type: string
      required:
        - deviceServiceName
        - addressableName
        - operatingState
        - adminState
    AddDeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in adding a Device Service. The ID of the new record will be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    AddressableResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        addressable:
          $ref: '#/components/schemas/Addressable'
    Addressable:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: integer
        modified:
          type: integer
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
    AutoEvent:
      type: object
      properties:
        frequency:
          type: string
        onChange:
          type: boolean
        resource:
          type: string
    Command:
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        id:
          type: string
          format: uuid
        name:
          type: string
        get:
          $ref: '#/components/schemas/CommandAction'
        put:
          $ref: '#/components/schemas/CommandAction'
    CommandAction:
      type: object
      properties:
        path:
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/CommandResponse'
        url:
          type: string
    CommandResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "In the context of a device profile, defines an expected response from a command issued to a device via the core-command service."
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        expectedValues:
          type: array
          items:
            type: string
    CorrelatedResponse:
      description: "Provides the correlation ID originally set via a corresponsing request that can be used for tracing via either REST or pub/sub transport. If used via REST, this value should be the same as that of  the ''correlation-id'' HTTP header"
      type: object
      properties:
        correlationId:
          type: string
        code:
          type: integer
        message:
          type: string
        version:
          description: "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - correlationId
        - version
    CorrelatedRequest:
      description: "Provides a correlation ID that can be used for tracing via either REST or pub/sub transport. If used via REST, this value should be the same as that of  the ''correlation-id'' HTTP header"
      type: object
      properties:
        correlationId:
          type: string
        version:
          description: "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver"
          type: string
          example: "2.0.x"
      required:
        - correlationId
        - version
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: integer
        modified:
          type: integer
        name:
          type: string
        description:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        addressableId:
          type: string
        addressableName:
          type: string
        lastConnected:
          type: integer
        lastReported:
          type: integer
        labels:
          type: array
          items:
            type: string
        location:
          type: object
        serviceId:
          type: string
        serviceName:
          type: string
        profileId:
          type: string
        profileName:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
    DeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        labels:
          type: array
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
        coreCommands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
      required:
        - name
    DeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    DeviceResource:
      description: "DeviceResource represents a value on a device that can be read or written."
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        tag:
          type: string
        properties:
          $ref: '#/components/schemas/ProfileProperty'
        attributes:
          type: object
          additionalProperties:
            type: string
    DeviceResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
    DeviceService:
      description: "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        lastConnected:
          type: integer
        lastReported:
          type: integer
        operatingState:
          type: string
        labels:
          type: array
          items:
            type: string
        addressable:
          $ref: '#/components/schemas/Addressable'
        adminState:
          type: string
    DeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      type: object
      properties:
        service:
          $ref: '#/components/schemas/DeviceService'
    ProfileProperty:
      description: "A property defining the data type of a device's reading"
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PropertyValue'
        units:
          $ref: '#/components/schemas/Units'
    ProfileResource:
      description: "Defines read/write capabilities native to the device"
      type: object
      properties:
        name:
          type: string
        get:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
        set:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
    PropertyValue:
      description: "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      type: object
      properties:
        type:
          type: string
        readWrite:
          type: string
        minimum:
          type: string
        maximum:
          type: string
        defaultValue:
          type: string
        size:
          type: string
        mask:
          type: string
        shift:
          type: string
        scale:
          type: string
        offset:
          type: string
        base:
          type: string
        assertion:
          type: string
        precision:
          type: string
        floatEncoding:
          type: string
        mediaType:
          type: string
    ProtocolProperties:
      type: object
      additionalProperties:
        type: string
    ResourceOperation:
      description: "Defines an operation of which a device is capable."
      type: object
      properties:
        index:
          type: string
        operation:
          type: string
        object:
          type: string
        deviceResource:
          type: string
        parameter:
          type: string
        resource:
          type: string
        deviceCommand:
          type: string
        secondary:
          type: array
          items:
            type: string
        mappings:
          type: object
          additionalProperties:
            type: string
    Units:
      type: object
      properties:
        type:
          type: string
        readWrite:
          type: string
        defaultValue:
          type: string
    UpdateAddressableRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
      required:
        - id
        - name
        - protocol
        - address
    UpdateAddressableResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating an Addressable. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateAdminStateRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        adminState:
          description: "Can only be set to LOCKED or UNLOCKED"
          type: string
      required:
        - deviceId
        - adminState
    UpdateAdminStateResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating a device's AdminState. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceLastConnectedRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to update the Last Connected timestamp on a given device. If the notify property is set to true, the device service managing the device will receive a notification."
      type: object
      properties:
        id:
          type: string
          format: uuid
        time:
          type: integer
        notify:
          type: boolean
      required:
        - id
        - time
    UpdateDeviceLastConnectedResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating a device's Last Connected timestamp. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceLastReportedRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to update the Last Reported timestamp on a given device. If the notify property is set to true, the device service managing the device will receive a notification."
      type: object
      properties:
        id:
          type: string
          format: uuid
        time:
          type: integer
        notify:
          type: boolean
      required:
        - id
        - time
    UpdateDeviceLastReportedResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating a device's Last Reported timestamp. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to update an existing device definition."
      type: object
      properties:
        id:
          type: string
          format: uuid
        deviceName:
          type: string
        serviceName:
          type: string
        profileName:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
      required:
        - id
        - deviceName
        - serviceName
        - profileName
        - protocols
    UpdateDeviceResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating the state of a device. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceProfileRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to update an existing device profile. When making this request, populate the ID and name properties."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    UpdateDeviceProfileResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating a device profile. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateDeviceServiceRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      description: "A request to update an existing DeviceService"
      type: object
      properties:
        id:
          type: string
          format: uuid
        deviceServiceName:
          type: string
        addressableName:
          type: string
        operatingState:
          description: "Can only be set to ENABLED or DISABLED"
          type: string
        labels:
          type: array
          items:
            type: string
        adminState:
          description: "Can only be set to LOCKED or UNLOCKED"
          type: string
      required:
        - id
        - deviceServiceName
        - addressableName
        - operatingState
        - adminState
    UpdateDeviceServiceResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating a device service. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    UpdateOperatingStateRequest:
      allOf:
        - $ref: '#/components/schemas/CorrelatedRequest'
      type: object
      properties:
        deviceId:
          type: string
          format: uuid
        operatingState:
          description: "Can only be set to ENABLED or DISABLED"
          type: string
      required:
        - deviceId
        - operatingState
    UpdateOperatingStateResponse:
      allOf:
        - $ref: '#/components/schemas/CorrelatedResponse'
      description: "A response type for use in updating a device's OperatingState. The ID of the affected record will be returned to the caller."
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: "The number of items to skip before starting to collect the result set."
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: "The numbers of items to return."
paths:
  /addressable:
    post:
      summary: "Allows definition of new addressables"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddAddressableRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddAddressableResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddAddressableResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddAddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddAddressableResponse'
    put:
      summary: "Allows updates to an existing addressable"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateAddressableRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAddressableResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAddressableResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAddressableResponse'
  /addressable/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of addressables sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
  '/addressable/host/{host}':
    parameters:
      - name: host
        in: path
        required: true
        schema:
          type: string
        description: "The hostname or IP address of the addressable you wish to load."
    get:
      summary: "Returns an addressable by its host"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addressable'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
  '/addressable/id/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns an addressable by ID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
    delete:
      summary: "Delete an addressable by ID"
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
  '/addressable/name/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the addressable you wish to load, datatype string."
    get:
      summary: "Returns an addressable by name"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
    delete:
      summary: "Delete an addressable by name"
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressableResponse'
  '/addressable/port/{port}':
    parameters:
      - name: port
        in: path
        required: true
        schema:
          type: integer
        description: "The port of the addressable you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns a list of all addressables listening on the specified port"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressableResponse'
  /device:
    post:
      summary: "Allows provisioning of a new device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceResponse'
    put:
      summary: "Allows updates to an existing device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceResponse'
  /device/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of devices sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
  '/device/check/id/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returned status code indicates if the device exists (204) or not (404)."
      responses:
        '204':
          description: "Device exists"
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
  '/device/check/name/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you want to check on."
    get:
      summary: "Returned status code indicates if the device exists (204) or not (404)."
      responses:
        '204':
          description: "Device exists"
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
  '/device/id/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device by ID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
    delete:
      summary: "Delete a device by ID"
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/DeviceResponse'
  /device/lastconnected:
    put:
      summary: "Updates the 'last connected' timestamp for the specified device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceLastConnectedRequest'
      responses:
        '200':
          description: "Update successful"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastConnectedResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastConnectedResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastConnectedResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastConnectedResponse'
  /device/lastreported:
    put:
      summary: "Updates the 'last reported' timestamp for the specified device"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceLastReportedRequest'
      responses:
        '200':
          description: "Update successful"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastReportedResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastReportedResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastReportedResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceLastReportedResponse'
  '/device/name/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name of the device you wish to load, datatype string."
    get:
      summary: "Returns a device by name"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
    delete:
      summary: "Delete a device by name"
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
  '/device/label/{label}':
    parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
        description: "The label of the devices you wish to load."
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Returns all devices assigned to the specified label"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
  '/device/profile/id/{id}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The unique id of a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
  '/device/profile/name/{name}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device profile"
    get:
      summary: "Returns all devices assigned to the specified device profile"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
  '/device/service/id/{id}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: "The unique id of a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
  '/device/service/name/{name}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The name identifying a device service"
    get:
      summary: "Returns all devices assigned to the specified device service"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
  /deviceprofile:
    post:
      summary: "Allows creation of a new device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceProfileRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceProfileResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceProfileResponse'
    put:
      summary: "Allows updates to an existing device profile"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateDeviceProfileRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceProfileResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceProfileResponse'
  /deviceprofile/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of device profiles sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
  '/deviceprofile/id/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device profile by ID"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
    delete:
      summary: "Delete a device profile by ID. This operation will fail if there are devices actively using the profile."
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
  '/deviceprofile/name/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of a device profile"
    get:
      summary: "Returns a device profile by its name"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
    delete:
      summary: "Delete a device profile by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfileResponse'
  '/deviceprofile/manufacturer/{manufacturer}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
  '/deviceprofile/manufacturer/{manufacturer}/model/{model}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: manufacturer
        in: path
        required: true
        schema:
          type: string
        description: "The manufacturer for the device profiles in which you're interested."
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model of the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer and model."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
  '/deviceprofile/model/{model}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: model
        in: path
        required: true
        schema:
          type: string
        description: "The model assigned to the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given model."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
  '/deviceprofile/label/{label}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: label
        in: path
        required: true
        schema:
          type: string
        description: "A label applied to the device profiles in which you're interested."
    get:
      summary: "Find all DeviceProfiles having at least one label matching the label provided"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProfileResponse'
  /deviceservice:
    post:
      summary: "Add a new DeviceService - name must be unique.  The Addressable must already exist and can be referenced by an included Addressable object containing the Addressable's id or name."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddDeviceServiceRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceServiceResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDeviceServiceResponse'
    put:
      summary: "Allows updates to an existing device service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceServiceRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceServiceResponse'
        '409':
          description: "The provided request conflicts with existing data"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateDeviceServiceResponse'
  /deviceservice/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: "Given the entire range of device services sorted by last modified descending, returns a portion of that range according to the offset and limit parameters."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
  '/deviceservice/id/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device service by ID"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
    delete:
      summary: "Delete a device service by ID"
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
  '/deviceservice/name/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of the device service you want to load."
    get:
      summary: "Returns a device service by its unique name"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
    delete:
      summary: "Delete a device service by its unique name"
      responses:
        '204':
          description: "Delete successful"
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
  '/deviceservice/addressable/id/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: "The unique ID of an addressable"
    get:
      summary: "Returns the device service associated with the specified addressable"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
  '/deviceservice/addressable/name/{name}':
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: "The unique name of an addressable"
    get:
      summary: "Returns the device service associated with the specified addressable"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceResponse'
  '/deviceservice/label/{label}':
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: label
        in: path
        required: true
        schema:
          type: string
        description: "A label applied to the device services in which you're interested."
    get:
      summary: "Find all DeviceServices having at least one label matching the label provided"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceResponse'
  /deviceservice/adminstate:
    put:
      summary: "Update the AdminState for a specific device service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateAdminStateRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAdminStateResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAdminStateResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAdminStateResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateAdminStateResponse'
  /deviceservice/operatingstate:
    put:
      summary: "Update the OperatingState for a specific device service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateOperatingStateRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateOperatingStateResponse'
        '400':
          description: "Request is in an invalid state"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateOperatingStateResponse'
        '404':
          description: "The requested resource does not exist"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateOperatingStateResponse'
        '500':
          description: "An unexpected error occurred on the server"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateOperatingStateResponse'