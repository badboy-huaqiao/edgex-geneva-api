openapi: 3.0.0
info:
  title: Edgex Foundry - Core Metadata Data API
  description: This is the definition of the API for the Core Metadata service in the EdgeX Foundry IOT microservice platform. Core Metadata is responsible for all information related to provisioned devices and their associated services.
  version: 2.x
  
servers:
  - url: http://localhost:48081/api/v2
    description: URL for local development and testing
  
components:
  schemas:
    AddAddressableRequest:
      description: "A request to add a new addressable."
      type: object
      properties:
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
      required:
        - name
        - protocol
        - address
    AddDeviceRequest:
      description: "A request to add a new device associated with a specific device service and conforming to a specific device profile."
      type: object
      properties:
        deviceName:
          type: string
        serviceName:
          type: string
        profileName:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
      required:
        - deviceName
        - serviceName
        - profileName
        - protocols
    AddDeviceProfileRequest:
      description: "A request to add a new device profile. When making this request, the ID property should not be populated."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
    Addressable:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: integer
        modified:
          type: integer
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
    AutoEvent:
      type: object
      properties:
        frequency:
          type: string
        onChange:
          type: boolean
        resource:
          type: string
    Command:
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        id:
          type: string
          format: uuid
        name:
          type: string
        get:
          $ref: '#/components/schemas/CommandAction'
        put:
          $ref: '#/components/schemas/CommandAction'
    CommandAction:
      type: object
      properties:
        path:
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/CommandResponse'
        url:
          type: string
    CommandResponse:
      description: 'In the context of a device profile, defines an expected response from a command issued to a device via the core-command service.'
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        expectedValues:
          type: array
          items:
            type: string
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created:
          type: integer
        modified:
          type: integer
        name:
          type: string
        description:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        addressableId:
          type: string
        addressableName:
          type: string
        lastConnected:
          type: integer
        lastReported:
          type: integer
        labels:
          type: array
          items:
            type: string
        location:
          type: object
        serviceId:
          type: string
        serviceName:
          type: string
        profileId:
          type: string
        profileName:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
    DeviceProfile:
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
      type: object
      properties:
        created:
          type: integer
        modified:
          type: integer
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        labels:
          type: array
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResource'
        deviceCommands:
          type: array
          items:
            $ref: '#/components/schemas/ProfileResource'
        coreCommands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
      required:
        - name
    DeviceResource:
      description: "DeviceResource represents a value on a device that can be read or written."
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        tag:
          type: string
        properties:
          $ref: '#/components/schemas/ProfileProperty'
        attributes:
          type: object
          additionalProperties:
             type: string
    ErrorResponse:
      description: "A generic response type indicating a failed operation. An optional message property allows for miscellaneous information to be returned back to the caller."
      type: object
      properties:
        message:
          type: string
    NewIdResponse:
      description: "A response type for use in operations where new entities are created and the ID of the new entity should be returned to the caller. An optional message property allows for miscellaneous information to be returned."
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
      required:
        - id
    ProfileProperty:
      description: "A property defining the data type of a device's reading"
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PropertyValue'
        units:
          $ref: '#/components/schemas/Units'
    ProfileResource:
      description: "Defines read/write capabilities native to the device"
      type: object
      properties:
        name:
          type: string
        get:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
        set:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOperation'
    PropertyValue:
      description: "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      type: object
      properties:
        type:
          type: string
        readWrite:
          type: string
        minimum:
          type: string
        maximum:
          type: string
        defaultValue:
          type: string
        size:
          type: string
        mask:
          type: string
        shift:
          type: string
        scale:
          type: string
        offset:
          type: string
        base:
          type: string
        assertion:
          type: string
        precision:
          type: string
        floatEncoding:
          type: string
        mediaType:
          type: string
    ProtocolProperties:
      type: object
      additionalProperties:
        type: string
    ResourceOperation:
      description: "Defines an operation of which a device is capable."
      type: object
      properties:
        index:
          type: string
        operation:
          type: string
        object:
          type: string
        deviceResource:
          type: string
        parameter:
          type: string
        resource:
          type: string
        deviceCommand:
          type: string
        secondary:
          type: array
          items:
            type: string
        mappings:
          type: object
          additionalProperties:
            type: string
    SuccessResponse:
      description: "A generic response type indicating a successful operation. An optional message property allows for miscellaneous information to be returned back to the caller." 
      type: object
      properties:
        message:
          type: string
    Units:
      type: object
      properties:
        type:
          type: string
        readWrite:
          type: string
        defaultValue:
          type: string
    UpdateAddressableRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        protocol:
          type: string
        method:
          type: string
        address:
          type: string
        port:
          type: integer
        path:
          type: string
        publisher:
          type: string
        user:
          type: string
        password:
          type: string
        topic:
          type: string
      required:
        - id
        - name
        - protocol
        - address
    UpdateDeviceLastConnectedRequest:
      description: "A request to update the last connected timestamp on a given device. If the notify property is set to true, the device service managing the device will receive a notification."
      type: object
      properties:
        id:
          type: string
          format: uuid
        time:
          type: integer
        notify:
          type: boolean
      required:
      - id
      - time
    UpdateDeviceLastReportedRequest:
      description: "A request to update the last reported timestamp on a given device. If the notify property is set to true, the device service managing the device will receive a notification."
      type: object
      properties:
        id:
          type: string
          format: uuid
        time:
          type: integer
        notify:
          type: boolean
      required:
      - id
      - time
    UpdateDeviceRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        deviceName:
          type: string
        serviceName:
          type: string
        profileName:
          type: string
        adminState:
          type: string
        operatingState:
          type: string
        autoEvents:
          type: array
          items:
            $ref: '#/components/schemas/AutoEvent'
        protocols:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProtocolProperties'
      required:
        - id
        - deviceName
        - serviceName
        - profileName
        - protocols
    UpdateDeviceProfileRequest:
      description: "A request to update an existing device profile. When making this request, populate the ID and name properties."
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/DeviceProfile'
  responses:
    BadRequest:
      description: "Request is in an invalid state"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: "The provided request conflicts with existing data"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: "The requested resource does not exist"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: "An unexpected error occurred on the server"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.
paths:
  /addressable:
    post:
      summary: Allows definition of a new addressable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddressableRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Allows updates to an existing addressable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressableRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /addressable/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: Given the entire range of addressables sorted by last modified descending, returns a portion of that range according to the offset and limit parameters.
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Addressable'
        '500':
          $ref: '#/components/responses/ServerError'
  /addressable/host/{host}:
    parameters: 
    - name: host
      in: path
      required: true
      schema:
        type: string
      description: The hostname or IP address of the addressable you wish to load.
    get:
      summary: Returns an addressable by its host
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addressable'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /addressable/id/{id}:
    parameters: 
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: An ID of datatype string, by default a GUID.
    get:
      summary: Returns an addressable by ID
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addressable'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete an addressable by ID
      responses:
        '204':
          description: "Delete successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /addressable/name/{name}:
    parameters: 
    - name: name
      in: path
      required: true
      schema:
        type: string
      description: The name of the addressable you wish to load, datatype string.
    get:
      summary: Returns an addressable by name
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addressable'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete an addressable by name
      responses:
        '204':
          description: "Delete successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /addressable/port/{port}:
    parameters: 
    - name: port
      in: path
      required: true
      schema:
        type: integer
      description: The port of the addressable you wish to load.
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    get:
      summary: Returns a list of all addressables listening on the specified port
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Addressable'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device:
    post:
      summary: Allows provisioning of a new device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Allows updates to an existing device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: Given the entire range of devices sorted by last modified descending, returns a portion of that range according to the offset and limit parameters.
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Device'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/check/id/{id}:
    parameters: 
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: An ID of datatype string, by default a GUID.
    get:
      summary: Returned status code indicates if the device exists (204) or not (404).
      responses:
        '204':
          description: "Device exists"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/check/name/{name}:
    parameters: 
    - name: name
      in: path
      required: true
      schema:
        type: string
      description: The name of the device you want to check on.
    get:
      summary: Returned status code indicates if the device exists (204) or not (404).
      responses:
        '204':
          description: "Device exists"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/id/{id}:
    parameters: 
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: An ID of datatype string, by default a GUID.
    get:
      summary: Returns a device by ID
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a device by ID
      responses:
        '204':
          description: "Delete successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/lastconnected:
    put:
      summary: Updates the "last connected" timestamp for the specified device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceLastConnectedRequest'
      responses:
        '204':
          description: "Update successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/lastreported:
    put:
      summary: Updates the "last reported" timestamp for the specified device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceLastReportedRequest'
      responses:
        '204':
          description: "Update successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/name/{name}:
    parameters: 
    - name: name
      in: path
      required: true
      schema:
        type: string
      description: The name of the device you wish to load, datatype string.
    get:
      summary: Returns a device by name
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a device by name
      responses:
        '204':
          description: "Delete successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/label/{label}:
    parameters: 
    - name: label
      in: path
      required: true
      schema:
        type: string
      description: The label of the devices you wish to load, datatype string.
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    get:
      summary: Returns all devices assigned to the specified label
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/profile/id/{id}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: id
      in: path
      required: true
      schema:
        type: string
      description: The unique id of a device profile
    get:
      summary: Returns all devices assigned to the specified device profile
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/profile/name/{name}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: name
      in: path
      required: true
      schema:
        type: string
      description: The name identifying a device profile
    get:
      summary: Returns all devices assigned to the specified device profile
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/service/id/{id}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: id
      in: path
      required: true
      schema:
        type: string
      description: The unique id of a device service
    get:
      summary: Returns all devices assigned to the specified device service
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /device/service/name/{name}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: name
      in: path
      required: true
      schema:
        type: string
      description: The name identifying a device service
    get:
      summary: Returns all devices assigned to the specified device service
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Device'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /deviceprofile:
    post:
      summary: Allows creation of a new device profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceProfileRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Allows updates to an existing device profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceProfileRequest'
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /deviceprofile/all:
    parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
    get:
      summary: Given the entire range of device profiles sorted by last modified descending, returns a portion of that range according to the offset and limit parameters.
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/DeviceProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /deviceprofile/id/{id}:
    parameters: 
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: "An ID of datatype string, by default a GUID."
    get:
      summary: "Returns a device profile by ID"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfile'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: "Delete a device profile by ID. This operation will fail if there are devices actively using the profile."
      responses:
        '204':
          description: "Delete successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /deviceprofile/name/{name}:
    parameters: 
    - name: name
      in: path
      required: true
      schema:
        type: string
      description: "The unique name of a device profile"
    get:
      summary: "Returns a device profile by its name"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfile'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: "Delete a device profile by its unique name. This operation will fail if there are devices actively using the profile."
      responses:
        '204':
          description: "Delete successful"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
  /deviceprofile/manufacturer/{manufacturer}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: manufacturer
      in: path
      required: true
      schema:
        type: string
      description: "The manufacturer for the device profiles in which you're interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/DeviceProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/deviceprofile/manufacturer/{manufacturer}/model/{model}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: manufacturer
      in: path
      required: true
      schema:
        type: string
      description: "The manufacturer for the device profiles in which you're interested."
    - name: model
      in: path
      required: true
      schema:
        type: string
      description: "The model of the device for the device profiles in which your interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer and model."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/DeviceProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  /v1/deviceprofile/model/{model}:
    parameters:
    - $ref: '#/components/parameters/offsetParam'
    - $ref: '#/components/parameters/limitParam'
    - name: model
      in: path
      required: true
      schema:
        type: string
      description: "The model of the device for the device profiles in which your interested."
    get:
      summary: "Returns a list of device profiles for the given manufacturer and model."
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/DeviceProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'